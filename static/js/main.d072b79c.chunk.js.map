{"version":3,"sources":["utils/DataAreaContext.js","components/DataBody/index.js","components/DataTable/index.js","components/SearchName/index.js","components/Nav/index.js","utils/API.js","components/DataArea/index.js","components/Main/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","DataBody","context","useContext","formatDate","date","dateArray","split","year","join","developerState","filteredUsers","map","login","name","picture","phone","email","dob","data-th","className","src","medium","alt","first","last","href","target","uuid","DataTable","console","log","id","headings","width","style","onClick","handleSort","toLowerCase","SearchName","type","placeholder","onChange","e","handleSearchChange","Nav","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","data","Provider","value","event","filter","filteredList","item","indexOf","heading","sortedUsers","sort","a","b","undefined","localeCompare","length","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d072b79c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DataAreaContext = React.createContext(\n    \n   \n\n);\n\nexport default DataAreaContext;","import React, { useContext } from \"react\";\nimport \"./DataBody.css\"\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\nconst DataBody = () => {\n    const context = useContext(DataAreaContext);\n\n\n    function formatDate(date){\n        const dateArray = date.split(\"-\");\n        const year = dateArray[0];\n        const month =dateArray[1];\n        const dayArray = dateArray[2].split(\"T\");\n        const day = dayArray[0];\n        const formattedDate = [month, day, year].join(\"-\");\n        return formattedDate;\n\n    }\n    return (\n        <tbody>\n            {(\n                context.developerState.filteredUsers.map (({ login, name, picture, phone, email, dob}) => {\n                    return (\n                        <tr key={login.uuid}>\n                            <td data-th=\"Image\" className=\"align-middle\">\n                                <img src={picture.medium} alt={\"profile img for \" + name.first + \" \" + name.last} className=\"img-responsive\" />\n                            </td>\n                            <td data-th=\"Name\" className=\"name align-middle\">{name.first+ \" \" +name.last}</td>\n                            <td data-th=\"Phone\" className=\"align-middle\">{phone}</td>\n                            <td data-th=\"Email\" className=\"align-middle\"><a href={\"mailto:\" + email} target=\"__blank\">{email}</a></td>\n                            <td data-th=\"DOB\" className=\"align-middle\">{formatDate(dob.date)}</td>\n                        </tr>\n                    )\n                })\n            )}\n        </tbody>\n    )\n}\n\nexport default DataBody;","/* eslint-disable no-unused-vars */\nimport React, { useContext } from \"react\";\nimport DataBody from \"../DataBody\";\nimport \"./DataTable.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\nconst DataTable = () => {\n    const context = useContext(DataAreaContext);\n\n    return (\n        <div className=\"datatable mt-2\">\n        {console.log(context.developerState.filteredUsers)}\n            <table id=\"table\"\n            className=\"table-hover\">\n                <thead>\n                    <tr>\n                        {context.developerState.headings.map(({ name,  width }) => {\n                            return (<th \n                                className=\"col\"\n                                key={name}\n                                style ={{ width}}\n                                onClick={() => {\n                                    context.handleSort(name.toLowerCase());\n                                }}\n                                >\n                                    { name }\n\n                                    <span className=\"pointer\"></span>\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n\n                <DataBody />\n            </table>\n        </div>\n    )\n}\nexport default DataTable;","import React, { useContext } from \"react\";\nimport \"./SearchName.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\n\nconst SearchName = () => {\n    const context = useContext(DataAreaContext)\n\n    return (\n        <div className=\"searchbox\">\n            <form className=\"form-inline\">\n                <input\n                className=\"form-control mr-sm-4\"\n                type=\"search\"\n                placeholder=\"Search\"\n                onChange={e => context.handleSearchChange(e)}/>\n                <button className=\"btn\" type=\"submit\">\n                    Search\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchName;","import React from \"react\";\nimport SearchName from \"../SearchName\";\n\nimport \"./Nav.css\";\n\nfunction Nav (){\n    return (\n        <nav className=\"navbar navbar-expand-lg\">\n        <div className=\"search-area col-4\">\n            <SearchName />\n        </div>\n        </nav>\n    )\n}\n\nexport default Nav;","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\n\nexport default {\n    getUsers:function(){\n        return axios.get(\"https://randomuser.me/api/?results=200\");\n    }\n}","import React, {useState, useEffect} from \"react\";\nimport DataTable from \"../DataTable\";\nimport Nav from \"../Nav\";\nimport API from \"../../utils/API\";\nimport \"./DataArea.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\"\n\nconst DataArea = () => {\n      const [developerState, setDeveloperState] = useState({\n        users: [],\n        order: \"ascend\",\n        filteredUsers: [],\n        headings: [\n          { name: \"Image\", width: \"10%\", },\n          { name: \"Name\", width: \"10%\", },\n          { name: \"Phone\", width: \"20%\", },\n          { name: \"Email\", width: \"20%\", },\n          { name: \"DOB\", width: \"10%\", }\n        ]\n      });\n    \n      const handleSort = heading => {\n        if (developerState.order === \"descend\") {\n            setDeveloperState({\n                order:\"ascend\"\n            })\n        } else{\n            setDeveloperState({\n                order:\"descend\"\n            })\n        }\n    \n        const compareFnc = (a, b) => {\n          if (developerState.order === \"ascend\") {\n            if (a[heading] === undefined) {\n              return 1;\n            } else if (b[heading] === undefined) {\n              return -1;\n            } else if (heading === \"name\") {\n              return a[heading].first.localeCompare(b[heading].first);\n            } else {\n              return b[heading] - a[heading];\n            } \n          } else {\n        if (a[heading] === undefined){\n            return 1;\n        } else if (b[heading] === undefined){\n            return -1;\n        } else if (heading ===\"name\"){\n            return b[heading].first.localeCompare(a[heading].first);\n        } else {\nreturn b[heading]-  a[heading];\n        }\n    }\n    }\n        const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n\n        setDeveloperState({\n          ...developerState,\n          filteredUsers: sortedUsers\n});\n\n };\n   \n      const handleSearchChange = event => {\n        const filter = event.target.value;\n        const filteredList = developerState.users.filter(item => {\n          let values = item.name.first.toLowerCase();\n          return values.indexOf(filter.toLowerCase()) !== -1;\n        });\n    \n        setDeveloperState({ \n        ...developerState, \n        filteredUsers: filteredList });\n      };\n\n      useEffect(() => {\n        API.getUsers().then(results => {\n          setDeveloperState({\n            ...developerState,\n            users: results.data.results,\n            filteredUsers: results.data.results\n          });\n        });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n    \n      return (\n        <DataAreaContext.Provider value={{ developerState,  handleSearchChange, handleSort }}>\n          <Nav />\n          <div className=\"data-area\">{developerState.filteredUsers.length > 0 \n    ? <DataTable />\n     : <div></div>\n     }\n          </div>\n        </DataAreaContext.Provider>\n      );\n    }\n    \n    export default DataArea;","import React from \"react\";\nimport DataArea from \"../DataArea/index.js\";\nimport \"./Main.css\"\n\nfunction Main (){\n    return (\n        <>\n        <DataArea />\n        </>\n    )\n}\n\nexport default Main;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nfunction Wrapper ({ children }) {\n    return (\n        <div className=\"wrapper\">\n            { children }\n        </div>\n    );\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Header.css\"\n\nfunction Header () {\n    return (\n        <div className=\"header\">\n            <h1>Employees Directory</h1>\n            <p>Click on each heading below to filter or user the search box to conduct your own search</p>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\nimport Main from \"./components/Main\"\nimport Wrapper from \"./components/Wrapper\"\nimport Header from \"./components/Header\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n          <Main />\n      </Wrapper>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}